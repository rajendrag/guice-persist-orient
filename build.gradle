buildscript {
    apply from: "gradle/buildscript.gradle", to: buildscript
}

group = 'ru.vyarus'
description = 'Guice integration for OrientDB'

// convention: project.name == github project name == bintray package page
project.ext {
    build = {
        gradle = 2.5
        java = 1.6
        // if not empty runs animal sniffer on compile to guarantee binary compatibility; set '' to disable
        signature = 'org.codehaus.mojo.signature:java16-sun:+@signature'
        strictQualityCheck = true  // true to fail build on quality plugins warnings
    }
    github = {
        user = 'xvik'
    }
    bintray = {
        user = project.hasProperty('bintrayUser') ? bintrayUser : 'USER' // configured in ~/.gradle/gradle.properties
        key = project.hasProperty('bintrayKey') ? bintrayKey : 'KEY' // configured in ~/.gradle/gradle.properties
        repo = 'xvik'
        tags = ['guice', 'guice-persist', 'orientdb']
        dryRun = false // whether to run this as dry-run, without deploying (TEST RUN)
        publish = true //If version should be auto published after an upload

        signFiles = true // true to gpg sign files on bintray (certificate must be installed on bintray account)
        gpgPassphrase = project.hasProperty('gpgPassphrase') ? gpgPassphrase : '' // optionally configured in ~/.gradle/gradle.properties if certificate requires it

        mavenCentralSync = true // true to sync with maven central (files signing required)
        ossUser = project.hasProperty('sonatypeUser') ? sonatypeUser : 'USER' // configured in ~/.gradle/gradle.properties
        ossPassword = project.hasProperty('sonatypePassword') ? sonatypePassword : 'PASSWORD' // configured in ~/.gradle/gradle.properties
    }
    license = 'MIT'
    licenseDesc = 'The MIT License'
    // extend pom for maven central acceptance
    pomConfig = {
        scm {
            url github.scm
            connection github.scmConnection
            developerConnection github.scmConnection
        }
        licenses {
            license {
                name licenseDesc
                url github.licenseUrl
                distribution "repo"
            }
        }
        developers {
            developer {
                id "xvik"
                name "Vyacheslav Rusakov"
                email "vyarus@gmail.com"
            }
        }
    }
}

apply plugin: 'java'
apply plugin: 'groovy'
apply plugin: 'com.github.ben-manes.versions'
apply plugin: 'project-report'

apply from: 'gradle/build.gradle'
apply from: 'gradle/github.gradle'
apply from: 'gradle/bintray.gradle'
apply from: 'gradle/release.gradle'
apply from: 'gradle/maven.gradle'
apply from: 'gradle/quality.gradle'

apply from: 'build-deps.gradle'

dependencyUpdates.revision = 'release'

task showDependenciesTree(dependsOn: 'htmlDependencyReport', group: 'help', description:
        'Generates dependencies tree report and opens it in browser') << {
    java.awt.Desktop.getDesktop().open(file('/build/reports/project/dependencies/root.html'))
}

task install(dependsOn: 'publishMavenJavaPublicationToMavenLocal', group: 'publishing',
        description: 'Install to local maven repository') << {
    logger.warn "INSTALLED $project.group:$project.name:$project.version"
}

/*
Tasks hint:
    - dependencyUpdates: checks available dependencies updates
    - dependencies: print dependencies tree in console
    - check: run quality checks and tests
    - release: release version
*/
